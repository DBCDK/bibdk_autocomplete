<?php
/**
 * @file
 * Code for Bibliotek.dk Autocomplete
 */

/**
 * Implements hook_menu().
 */
function bibdk_autocomplete_menu() {
  $items['admin/config/search/bibdk_autocomplete'] = array(
    'title' => 'Bibliotek.dk autocomplete settings',
    'description' => 'Settings for bibliotek.dk autocomplete',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('bibdk_autocomplete_settings_form'),
    'access arguments' => array('administer search'),
    'file' => 'bibdk_autocomplete.admin.inc',
  );

  return $items;
}

/**
 * Implements hook_help().
 */
function bibdk_autocomplete_help($path, $arg) {
  switch ($path) {
    case 'admin/help#bibdk_autocomplete';
      $file = drupal_get_path('module', 'bibdk_autocomplete') . "/help/bibdk_autocomplete.html";
      return $output = file_get_contents($file);
      break;
  }
}


/**
 * Implements hook_flush_caches().
 *
 * Defines the cache table to store autocomplete data from the webservice.
 */
function bibdk_autocomplete_flush_caches() {
  return array('cache_bibdk_autocomplete');
}

/**
 * SuggestionService - retrieve suggestions with drupal_http_request()
 *
 * @param array $query
 *   Search suggestion parameters.
 *
 * @return array
 *   Search suggestion results.
 */
function bibdk_autocomplete_get_suggestions(array $query) {
  $items = array();

  $rest_url = variable_get('bibdk_autocomplete_rest_url', '');
  $url = url($rest_url, array('query' => $query));
  $headers = array('Accept' => 'application/json');

  watchdog('bibdk_autocomplete', 'Autocomplete URL sent: ' . $url, array(), $severity = WATCHDOG_DEBUG);
  $result = drupal_http_request($url, $headers);

  if (!empty($result->error)) {
    watchdog(
      'bibdk_autocomplete',
      "Autocomplete error: %error (%code)\nURL: !url",
      array(
        '%error' => $result->error,
        '%code' => $result->code,
        '!url' => $url,
      ),
      $severity = WATCHDOG_ERROR
    );
    return $items;
  }

  if (!empty($result->data)) {
    $result_data = drupal_json_decode($result->data);
    if (!empty($result_data['response']['docs'])) {
      foreach ($result_data['response']['docs'] as $suggestion) {
        $items[] = $suggestion['all'][0];
      }
    }
  }

  return $items;
}
