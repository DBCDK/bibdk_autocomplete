<?php
/**
 * @file
 * Code for Bibliotek.dk Autocomplete
 */


/**
 * Implements hook_menu().
 */
function bibdk_autocomplete_menu() {

  $items['bibdk/autocomplete/%/%'] = array(
    'title' => 'Bibliotek.dk autocomplete',
    'description' => 'Autocomplete callback',
    'page callback' => 'bibdk_autocomplete',
    'page arguments' => array(2,3),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  $items['admin/config/search/bibdk_autocomplete'] = array(
    'title' => 'Bibliotek.dk autocomplete settings',
    'description' => 'Settings for bibliotek.dk autocomplete',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('bibdk_autocomplete_admin'),
    'access arguments' => array('administer search'),
    'file' => 'includes/bibdk_autocomplete.admin.inc',
  );

  return $items;

}


function bibdk_autocomplete($p_uuid, $v_uuid, $string){

  $settings = variable_get('bibdk_autocomplete_settings', array());
  $url  = variable_get('bibdk_autocomplete_rest_url', NULL);
  $vars = variable_get('bibdk_autocomplete_var', array());

  $value_vars = $vars[$p_uuid]['vars'][$v_uuid];
  unset($value_vars['autocomplete']);

  if ( empty($value_vars['index']) ) {
    watchdog('bibdk_autocomplete', 'Autocomplete index not defined for value uuid ' . $v_uuid, $severity = WATCHDOG_ERROR);
    return drupal_json_output(array());
  }
  
  $url = ( $value_vars['facetIndex'] ) ? $url . '/facets' : $url . '/terms';
  
  $settings['highlight'] = ( $settings['highlight'] ) ? 'true' : NULL;

  $options['query'] = array('query' => check_plain($string)) + $value_vars + $settings;
  
  $url = url($url,$options);
  
  $curl = new MicroCURL();
  $result = json_decode($curl->get(array($url)));
  $curl->close();

  if ( $result->suggestions ) {
    foreach ( $result->suggestions as $suggestion ) {
      $items[ strip_tags($suggestion->suggestion) ] = $suggestion->suggestion;
    }
  } else {
    watchdog('bibdk_autocomplete', 'Autocomplete return empty set for ' . $url, array(), $severity = WATCHDOG_NOTICE);
  }

  // Return the result to the form in json
  drupal_json_output($items);
}


/**
 * Implements hook_form_FORM_ID_alter() for form search_block_form.
 */
function bibdk_autocomplete_form_search_block_form_alter(&$form, &$form_state, $form_id) {

  $page_path = ( !empty($form['page_id']['#default_value']) ) ? $form['page_id']['#default_value'] : ((isset($_GET['q'])) ? $_GET['q'] : NULL);

  $autocomplete_elements = variable_get('bibdk_autocomplete_var', array());

  foreach ( $autocomplete_elements as $key => $page ) {
    if ( $page['page_path'] == $page_path ) {
      $vars = $page['vars'];
      $p_uuid = $key;
    }
  }

  if ( !empty($vars) ) {
    foreach ( $vars as $v_uuid => $values ) {
      if ( !empty($form['advanced']) && !empty($form['advanced']['main']) ) {
        foreach ( $form['advanced']['main'] as $element_label => $elements ) {
          if ( is_array($elements) ) {
            foreach ( $elements as $element_uuid => $element_val ) {
              foreach ( $element_val as $element_key => $element_var ) {
                if (
                  is_array($element_var) &&
                  isset($element_var['#id']) &&
                  $element_var['#id'] == $v_uuid &&
                  $values['autocomplete']
                ) {
                  $form['advanced']['main'][$element_label][$element_uuid][$element_key]['#autocomplete_path'] = 'bibdk/autocomplete/' . $p_uuid . '/' . $v_uuid;
                }
              }
            }
          }
        }
      } else {
        watchdog('bibdk_autocomplete', 'Custom search elements not set. Check module weight', array(), $severity = WATCHDOG_NOTICE);
      }
      if ( !empty($form['advanced']) && !empty($form['advanced']['expand']) ) {
        foreach ( $form['advanced']['expand'] as $element_label => $elements ) {
          if ( is_array($elements) ) {
            foreach ( $elements as $element_uuid => $element_val ) {
              foreach ( $element_val as $element_key => $element_var ) {
                if (
                  is_array($element_var) &&
                  isset($element_var['#id']) &&
                  $element_var['#id'] == $v_uuid &&
                  $values['autocomplete']
                ) {
                  $form['expand']['main'][$element_label][$element_uuid][$element_key]['#autocomplete_path'] = 'bibdk/autocomplete/' . $p_uuid . '/' . $v_uuid;
                }
              }
            }
          }
        }
      }
    }
  }

  return $form;
}


/**
 * Implements hook_help().
 */
function bibdk_autocomplete_help($path, $arg) {
  switch ($path) {
    case 'admin/help#bibdk_autocomplete';
      $file = drupal_get_path('module', 'bibdk_autocomplete') . "/help/bibdk_autocomplete.html";
      return $output = file_get_contents($file);
    break;
  }
}

